buildscript {
    repositories {
        mavenCentral()
        maven {
      		url "https://plugins.gradle.org/m2/"
    	}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.4")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

jar {
    baseName = 'catwatch-backend'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url "http://maven.jenkins-ci.org/content/repositories/releases" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // github api
    compile("com.squareup.okhttp:okhttp-urlconnection:2.4.0")
    compile("com.squareup.okhttp:okhttp:2.4.0")
    compile("org.kohsuke:github-api:1.68") {
    	exclude module: 'org.jenkins-ci'
    }
    // web
	compile("org.springframework.boot:spring-boot-starter-web")
    compile("io.swagger:swagger-annotations:1.5.0")
	compile("com.fasterxml.jackson.core:jackson-annotations")
    // persistence
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile("org.postgresql:postgresql:9.4-1201-jdbc41")
    compile("com.mysema.querydsl:querydsl-jpa:3.6.5")
    // monitoring
	compile("org.springframework.boot:spring-boot-starter-actuator")

    compile("org.springframework.retry:spring-retry:1.1.2.RELEASE")
    compile("javax.mail:mail:1.4.7")
    compile("org.springframework:spring-context-support:4.1.7.RELEASE")

    // logging
    compile("ch.qos.logback:logback-classic:1.1.3")
    compile("org.slf4j:slf4j-api:1.7.12")
    // util
    compile("com.google.guava:guava:18.0")
    compile("commons-beanutils:commons-beanutils:1.9.2")
	// test
	testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
	testCompile("org.mockito:mockito-core")
	testCompile("org.hamcrest:hamcrest-core")
	testCompile("org.hamcrest:hamcrest-library")
	testCompile("org.springframework:spring-test")
	testCompile("com.jayway.jsonpath:json-path:0.9.1")
    testCompile("org.subethamail:subethasmtp:3.1.7")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

querydsl {
  jpa = true
}

test {
    testLogging {
        showStandardStreams = true // make sure output from standard out or error is shown in Gradle output
	}
}

